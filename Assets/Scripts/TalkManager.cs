using System.Collections;
using UnityEngine;
using UnityEngine.UI;
using Photon.Realtime;
using Photon.Pun;

public class TalkManager : MonoBehaviour
{
    MainSceneManager Msm;

    public GameObject dialoguePanel;

    public TypeEffect CinemaP1;
    public TypeEffect CinemaP2;

    public bool isDialogueFinished = false;

    private string[] P1Text = {
        "? ??? ????",
        "?????",
        "?? ?? ? ??????",
        "? ????? ???? ???...\n\n??? ?? ??? ???? ??? ???...",
        "?? ??? ?? ???"
    };

    private string[] P2Text = {
        "?? ?? ????",
        "?? ? ?????.\n\n???? ??? ?? ???...\n\n??? ? ?? ???? ???? ???...",
        "?? ??? ??? ????",
        "? ?? ???? ??? ?? ?? ??????",
        "?? ?? ? ???? ?? ????? ? ????"
    };

    private int P1Index = 0;
    private int P2Index = 0;

    private bool isP1Talking = true; // P1?? ??

    public string[] S2Text = {
        "??????? ?? ??? ?? ???,\n\n????? ?? ?? ?? ??",
        "?????? ??? ?? ?? ? ???????!!!",
        "??? ?? ??? ?? ??? ?????.\n\n? ? ????? ??? ? ?? 2?? ???? ???,\n\n??? ?? ??? ???? ???? ???.",
        "?... ??? ?? ??? ????.",
        "??! ?? ??!",
        "???, ??? ?. ?? ???? ??? ??.",
        "??...? ???? ???...",
        "?? ??? ???? ?.",
        "??! ???? ? ??????? ?? ???.",
        "?? ??? ???...?",
        "??. ?? ?? ? ???",
        "??...?? ? ??...",
        "?? ???? ???, ??? ? ??? ??? ??.\n\n??? ??? ?? ?? 5?? ?? 5?? ????."
    };
    public string[] S3Text =
    {
        "??????? ?? ???? ?????,\n\n??? ???? ????? ? ??",
        "?? ? ??...?? ???? ??? ? ??...",
        "?????? ?? ?? ???? ??? ??\n\n???? ??? ?? ?????.\n\n??? ??? ?? ??? ???? ??? ??? ?? ??????.",
        "?? ? ?? ?? ??? ??????...\n\n?? ??? ??? ?? ? ??.",
        "??...? ??? ??? ?? ???? ??????",
        "??...?? ?? ??? ?????...",
        "? ????. ?? ?? ??? ??? ???.",
        "?? ?????? ?? ??? ???.",
        "? ???? ???...?",
        "??? ?? ??? ?? ??? ??? ? ???.",
        "?? ? ??? ??? ??? ? ????.",
        "???...?? ? ? ??? ??.",
        "?? ???? ???, ??? ? ??? ??? ??.\n\n??? ??? ???? 3?? ?? ??? ??."
    };
    private void Awake()
    {
        Msm = FindObjectOfType<MainSceneManager>();
        DontDestroyOnLoad(this.gameObject);
    }

    private void Start()
    {
        // ??? ?? ????? Start()?? ????? ??
        if (Msm != null && Msm.isCinemaFinished)
        {
            dialoguePanel.SetActive(true);
            StartCoroutine(ShowDialogue());
        }
    }

    // Update?? ???? ?? ???? ??? ??
    private void Update()
    {
        // dialoguePanel? ?? ???, ????? ??? ?? ??? ??
        if (Msm != null && Msm.isCinemaFinished && !dialoguePanel.activeSelf)
        {
            dialoguePanel.SetActive(true);
            StartCoroutine(ShowDialogue());
        }
    }

    IEnumerator ShowDialogue()
    {
        // ????? ?? ????
        while (P1Index < P1Text.Length || P2Index < P2Text.Length)
        {
            if (isP1Talking && P1Index < P1Text.Length)
            {
                CinemaP1.SetMsg(P1Text[P1Index]);
                yield return new WaitForSeconds(P1Text[P1Index].Length / CinemaP1.CharPerSeconds); // ?? ???? ???
                P1Index++;
                isP1Talking = false; // ??? P2? ??
                yield return new WaitForSeconds(2f);
            }
            else if (!isP1Talking && P2Index < P2Text.Length)
            {
                CinemaP2.SetMsg(P2Text[P2Index]);
                yield return new WaitForSeconds(P2Text[P2Index].Length / CinemaP2.CharPerSeconds); // ?? ???? ???
                P2Index++;
                isP1Talking = true; // ??? P1? ??
                yield return new WaitForSeconds(2f);
            }
            yield return null;
        }
        isDialogueFinished = true;
        // ??? ?? ??? dialoguePanel? ????
        dialoguePanel.SetActive(false);
    }

    public IEnumerator ImagePadeOut(Image image, Image image1)
    {
        RectTransform rectTransform = image.GetComponent<RectTransform>(); // RectTransform ????
        CanvasGroup canvasGroup = image.GetComponent<CanvasGroup>(); // Alpha ?? ???? ?? CanvasGroup ??
        if (canvasGroup == null)
        {
            canvasGroup = image.gameObject.AddComponent<CanvasGroup>(); // ??? ??
        }

        rectTransform.anchoredPosition = new Vector2(rectTransform.anchoredPosition.x, 0); // ?? Y ?? ??
        canvasGroup.alpha = 1f; // ?? Alpha ? ??

        while (rectTransform.anchoredPosition.y < 1200)
        {
            rectTransform.anchoredPosition += new Vector2(0, 200) * Time.deltaTime; // Y ?? ??
            rectTransform.localScale = Vector3.Lerp(rectTransform.localScale, new Vector3(0.2f, 0.2f, 0.2f), Time.deltaTime); // ?? ?? ???
            canvasGroup.alpha = Mathf.Lerp(canvasGroup.alpha, 0f, Time.deltaTime); // ??? ?? ??
            yield return null; // ?? ????? ??
        }

        if (rectTransform.anchoredPosition.y > 1200)
        {
            image1.gameObject.SetActive(true);
            yield return new WaitForSeconds(5f);

            if (PhotonNetwork.IsMasterClient)
            {
                PhotonNetwork.LoadLevel("MainScene");
            }
        }
    }
}

